Yes, it is possible to pass RPC data between two rooms in Photon.

One way to do this is to use Photon's RaiseEvent method, which allows you to broadcast custom 
data to all players in a room. To pass data between two rooms, you can use RaiseEvent in one room 
to send the data, and in the other room, you can use Photon's OnEvent callback to receive the data.

Here's an example of how you can pass an RPC call between two rooms in C#:

    In the first room, you can raise an event containing the data for the RPC call:


using Photon.Pun;

public class Room1Script : MonoBehaviourPunCallbacks
{
    public string rpcData = "This is the RPC data";

    void Start()
    {
        // Raise the event to send the RPC data to the other room
        byte eventCode = 1; // Define a custom event code
        RaiseEventOptions options = new RaiseEventOptions { Receivers = ReceiverGroup.Others };
        SendOptions sendOptions = new SendOptions { Reliability = true };
        PhotonNetwork.RaiseEvent(eventCode, rpcData, options, sendOptions);
    }
}




In the second room, you can use Photon's OnEvent callback to receive the event and call the RPC function:





using Photon.Pun;

public class Room2Script : MonoBehaviourPunCallbacks
{
    public PhotonView photonView;

    public void OnEvent(byte eventCode, object content, int senderId)
    {
        if (eventCode == 1) // Check if the event code matches the custom event code
        {
            string rpcData = content as string;
            photonView.RPC("UpdateText", RpcTarget.All, rpcData);
        }
    }
}





Note that you'll need to have both rooms connected to the same Photon server for this to work. Also, 
make sure that you have a PhotonView component attached to a game object in the second room, and that 
you have a script with an RPC function named UpdateText on that game object, as in the previous example.